librarydplyr
library(dplyr)
install dplyr
install.packages dplyr
install.packages(dplyr)
install.packages("dplyr")
installed.packages()
install.packages("dpylr")
dpyler
dpylr
library(dpylr)
library(dpylr)
install.packages("dpylr")
install.packages(Rtools)
install.packages("Rtools")
install.packages("dplyr")
library(dplyr)
library(readxl)
data <- read_excel("cpsaat39.xlsx", range = "A71:B82", col_names = c("Occupations", "Total Number of Workers"))
library(readxl)
data <- read_excel("cpsaat39.xlsx", range = "A71:B82", col_names = c("Occupations", "Total Number of Workers"))
library(ggplot2)
ggplot(data, aes(x = reorder(Occupations, -`Total Number of Workers`),
y = `Total Number of Workers`,
fill = `Total Number of Workers`)) +
geom_bar(stat = "identity", color = "black", width = 0.8) +  # Add color and border
geom_text(aes(label = `Total Number of Workers`),
vjust = -0.3,  # Move labels higher above the bars
color = "black", size = 3.5) +  # Slightly larger font size for labels
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Gradient color for bars
labs(title = "2023 US Total Number of Workers per IT Occupation",
subtitle = "Occupations sorted from highest to lowest number of workers by thousands",
x = "Occupations",
y = "Workers") +
ylim(0, max(data$`Total Number of Workers`) * 1.2) +  # Expand y-axis limits
theme_minimal(base_size = 12) +  # Increase base font size
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 8),  # Adjust size for x-axis labels
axis.text.y = element_text(size = 8),  # Adjust size for y-axis numbers
axis.title.x = element_text(size = 10, margin = margin(t = 10), face = "bold"),  # X-axis title size and style
axis.title.y = element_text(size = 10, margin = margin(r = 10), face = "bold"),  # Y-axis title size and style
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),  # Center-align title
plot.subtitle = element_text(size = 12, hjust = 0.5),              # Center-align subtitle
legend.position = "none"                                           # Remove legend
)
library(readxl)
data <- read_excel("cpsaat39.xlsx", range = "A71:B82", col_names = c("Occupations", "Total Number of Workers"))
library(ggplot2)
ggplot(data, aes(x = reorder(Occupations, -`Total Number of Workers`),
y = `Total Number of Workers`,
fill = `Total Number of Workers`)) +
geom_bar(stat = "identity", color = "black", width = 0.8) +  # Add color and border
geom_text(aes(label = `Total Number of Workers`),
vjust = -0.3,  # Move labels higher above the bars
color = "black", size = 3.5) +  # Slightly larger font size for labels
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Gradient color for bars
labs(title = "2023 US Total Number of Workers per IT Occupation",
subtitle = "Occupations sorted from highest to lowest number of workers by thousands",
x = "Occupations",
y = "Workers") +
ylim(0, max(data$`Total Number of Workers`) * 1.2) +  # Expand y-axis limits
theme_minimal(base_size = 12) +  # Increase base font size
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 8),  # Adjust size for x-axis labels
axis.text.y = element_text(size = 8),  # Adjust size for y-axis numbers
axis.title.x = element_text(size = 10, margin = margin(t = 10), face = "bold"),  # X-axis title size and style
axis.title.y = element_text(size = 10, margin = margin(r = 10), face = "bold"),  # Y-axis title size and style
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),  # Center-align title
plot.subtitle = element_text(size = 12, hjust = 0.5),              # Center-align subtitle
legend.position = "none"                                           # Remove legend
)
library(dplyr)
library(readxl)
library(tidyr)
data_clean <- data %>%
select(Year, `Total`, `Unemployed Percent\r\nof\r\nlabor\r\nforce`) %>%
rename(
Employed_Total = `Total`,
Unemployed_Percent = `Unemployed Percent\r\nof\r\nlabor\r\nforce`
) %>%
mutate(
Employed_Total = as.numeric(Employed_Total),
Unemployed_Percent = as.numeric(Unemployed_Percent)
)
ggplot(data_clean, aes(x = Employed_Total, y = Unemployed_Percent)) +
geom_line(color = "darkgreen", size = 1.2) +  # Change line color
labs(
title = "Unemployed vs. Employed",
x = "Employed",  # Updated x-axis title
y = "Unemployed"  # Updated y-axis title
) +
theme_minimal(base_size = 15) +  # Increase base font size
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold", color = "black"),  # Center title, change font size and color
axis.title.x = element_text(size = 16, face = "bold", color = "#0072B2"),  # X-axis title
axis.title.y = element_text(size = 16, face = "bold", color = "#0072B2"),  # Y-axis title
axis.text = element_text(size = 14)  # Axis text size
)
library(dplyr)
library(readxl)
library(tidyr)
library(dplyr)
library(readxl)
library(tidyr)
library(readr)  # If you're reading CSV or similar formats
library(ggplot2)
data <- read_excel("LineGraph.xlsx")
library(dplyr)
library(readxl)
library(tidyr)
library(readr)  # If you're reading CSV or similar formats
library(ggplot2)
data <- read_excel("LineGraph.xlsx")
data_clean <- data %>%
select(Year, `Total`, `Unemployed Percent\r\nof\r\nlabor\r\nforce`) %>%
rename(
Employed_Total = `Total`,
Unemployed_Percent = `Unemployed Percent\r\nof\r\nlabor\r\nforce`
) %>%
mutate(
Employed_Total = as.numeric(Employed_Total),
Unemployed_Percent = as.numeric(Unemployed_Percent)
)
ggplot(data_clean, aes(x = Employed_Total, y = Unemployed_Percent)) +
geom_line(color = "darkgreen", size = 1.2) +  # Change line color
labs(
title = "Unemployed vs. Employed",
x = "Employed",  # Updated x-axis title
y = "Unemployed"  # Updated y-axis title
) +
theme_minimal(base_size = 15) +  # Increase base font size
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold", color = "black"),  # Center title, change font size and color
axis.title.x = element_text(size = 16, face = "bold", color = "#0072B2"),  # X-axis title
axis.title.y = element_text(size = 16, face = "bold", color = "#0072B2"),  # Y-axis title
axis.text = element_text(size = 14)  # Axis text size
)
data_clean <- data %>%
select(Year, `Total`, `Unemployed Percent\r\nof\r\nlabor\r\nforce`) %>%
rename(
Employed_Total = `Total`,
Unemployed_Percent = `Unemployed Percent\r\nof\r\nlabor\r\nforce`
) %>%
mutate(
Employed_Total = as.numeric(Employed_Total),
Unemployed_Percent = as.numeric(Unemployed_Percent)
)
ggplot(data_clean, aes(x = Employed_Total, y = Unemployed_Percent)) +
geom_line(color = "darkgreen", size = 1.2) +  # Change line color
labs(
title = "Unemployed vs. Employed",
x = "Employed",  # Updated x-axis title
y = "Unemployed"  # Updated y-axis title
) +
theme_minimal(base_size = 15) +  # Increase base font size
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold", color = "black"),  # Center title, change font size and color
axis.title.x = element_text(size = 16, face = "bold", color = "#0072B2"),  # X-axis title
axis.title.y = element_text(size = 16, face = "bold", color = "#0072B2"),  # Y-axis title
axis.text = element_text(size = 14)  # Axis text size
)
install.packages("plotly")
install.packages("palmerpenguins")
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning")) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect")) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning")) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect")) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning")) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect")) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning")) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect")) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning")) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect")) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data <- read_excel("path_to_your_file/cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("path_to_your_file/cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart with adjusted x-axis labels
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal() +
scale_x_continuous(breaks = seq(min(data4$Year), max(data4$Year), by = 5)) + # Show every 5th year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart with adjusted x-axis labels
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal() +
scale_x_continuous(breaks = seq(min(data4$Year), max(data4$Year), by = 5)) + # Show every 5th year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Create a dual-line chart
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal() +
scale_x_continuous(breaks = seq(min(data4$Year), max(data4$Year), by = 5)) + # Show every 5th year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("path_to_your_file/cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Load necessary libraries
library(ggplot2)
library(readxl)
# Load the dataset
data4 <- read_excel("cleaned_annual_listing.xlsx", sheet = "Sheet1")
# Ensure Year column is numeric and remove NA values
data4$Year <- as.numeric(data4$Year)
data4 <- data4[!is.na(data4$Year), ]
# Create a dual-line chart with adjusted x-axis labels
ggplot(data4, aes(x = Year)) +
geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = "Work Stoppages Beginning", group = 1), na.rm = TRUE) +
geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = "Work Stoppages In Effect", group = 1), na.rm = TRUE) +
labs(title = "Comparison of Work Stoppages Beginning and In Effect Over the Years",
x = "Year",
y = "Number of Work Stoppages",
color = "Legend") +
theme_minimal() +
scale_x_continuous(breaks = seq(min(data4$Year, na.rm = TRUE), max(data4$Year, na.rm = TRUE), by = 5)) + # Show every 5th year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels
library(ggplot2)
ggplot(data, aes(x = reorder(Occupations, -`Total Number of Workers`),
y = `Total Number of Workers`,
fill = `Total Number of Workers`)) +
geom_bar(stat = "identity", color = "black", width = 0.8) +  # Add color and border
geom_text(aes(label = `Total Number of Workers`),
vjust = -0.3,  # Move labels higher above the bars
color = "black", size = 3.5) +  # Slightly larger font size for labels
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Gradient color for bars
labs(title = "2023 US Total Number of Workers per IT Occupation",
subtitle = "Occupations sorted from highest to lowest number of workers by thousands",
x = "Occupations",
y = "Workers") +
ylim(0, max(data$`Total Number of Workers`) * 1.2) +  # Expand y-axis limits
theme_minimal(base_size = 12) +  # Increase base font size
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 8),  # Adjust size for x-axis labels
axis.text.y = element_text(size = 8),  # Adjust size for y-axis numbers
axis.title.x = element_text(size = 10, margin = margin(t = 10), face = "bold"),  # X-axis title size and style
axis.title.y = element_text(size = 10, margin = margin(r = 10), face = "bold"),  # Y-axis title size and style
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),  # Center-align title
plot.subtitle = element_text(size = 12, hjust = 0.5),              # Center-align subtitle
legend.position = "none"                                           # Remove legend
)
library(readxl)
data <- read_excel("cpsaat39.xlsx", range = "A71:B82", col_names = c("Occupations", "Total Number of Workers"))
library(ggplot2)
ggplot(data, aes(x = reorder(Occupations, -`Total Number of Workers`),
y = `Total Number of Workers`,
fill = `Total Number of Workers`)) +
geom_bar(stat = "identity", color = "black", width = 0.8) +  # Add color and border
geom_text(aes(label = `Total Number of Workers`),
vjust = -0.3,  # Move labels higher above the bars
color = "black", size = 3.5) +  # Slightly larger font size for labels
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Gradient color for bars
labs(title = "2023 US Total Number of Workers per IT Occupation",
subtitle = "Occupations sorted from highest to lowest number of workers by thousands",
x = "Occupations",
y = "Workers") +
ylim(0, max(data$`Total Number of Workers`) * 1.2) +  # Expand y-axis limits
theme_minimal(base_size = 12) +  # Increase base font size
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 8),  # Adjust size for x-axis labels
axis.text.y = element_text(size = 8),  # Adjust size for y-axis numbers
axis.title.x = element_text(size = 10, margin = margin(t = 10), face = "bold"),  # X-axis title size and style
axis.title.y = element_text(size = 10, margin = margin(r = 10), face = "bold"),  # Y-axis title size and style
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),  # Center-align title
plot.subtitle = element_text(size = 12, hjust = 0.5),              # Center-align subtitle
legend.position = "none"                                           # Remove legend
)
library(dplyr)
library(readxl)
library(tidyr)
library(readr)  # If you're reading CSV or similar formats
library(ggplot2)
data2 <- read_excel("LineGraph.xlsx")
ggplot(data_clean, aes(x = Employed_Total, y = Unemployed_Percent)) +
geom_line(color = "darkgreen", size = 1.2) +  # Change line color
labs(
title = "Unemployed vs. Employed",
x = "Employed",  # Updated x-axis title
y = "Unemployed"  # Updated y-axis title
) +
theme_minimal(base_size = 15) +  # Increase base font size
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold", color = "black"),  # Center title, change font size and color
axis.title.x = element_text(size = 16, face = "bold", color = "#0072B2"),  # X-axis title
axis.title.y = element_text(size = 16, face = "bold", color = "#0072B2"),  # Y-axis title
axis.text = element_text(size = 14)  # Axis text size
)
data_clean <- data %>%
select(Year, `Total`, `Unemployed Percent\r\nof\r\nlabor\r\nforce`) %>%
rename(
Employed_Total = `Total`,
Unemployed_Percent = `Unemployed Percent\r\nof\r\nlabor\r\nforce`
) %>%
mutate(
Employed_Total = as.numeric(Employed_Total),
Unemployed_Percent = as.numeric(Unemployed_Percent)
)
data_clean <- data2 %>%
select(Year, `Total`, `Unemployed Percent\r\nof\r\nlabor\r\nforce`) %>%
rename(
Employed_Total = `Total`,
Unemployed_Percent = `Unemployed Percent\r\nof\r\nlabor\r\nforce`
) %>%
mutate(
Employed_Total = as.numeric(Employed_Total),
Unemployed_Percent = as.numeric(Unemployed_Percent)
)
ggplot(data_clean, aes(x = Employed_Total, y = Unemployed_Percent)) +
geom_line(color = "darkgreen", size = 1.2) +  # Change line color
labs(
title = "Unemployed vs. Employed",
x = "Employed",  # Updated x-axis title
y = "Unemployed"  # Updated y-axis title
) +
theme_minimal(base_size = 15) +  # Increase base font size
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold", color = "black"),  # Center title, change font size and color
axis.title.x = element_text(size = 16, face = "bold", color = "#0072B2"),  # X-axis title
axis.title.y = element_text(size = 16, face = "bold", color = "#0072B2"),  # Y-axis title
axis.text = element_text(size = 14)  # Axis text size
)
