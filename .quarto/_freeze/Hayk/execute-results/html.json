{
  "hash": "81f6248b7fd482bfece49c6aa0529c7b",
  "result": {
    "engine": "knitr",
    "markdown": "Hayk\n\n## Hayk\n\n## Week 1\n\nExcel\n\n### Wednesday\n\nI spent about 30 mins to an hour working through the VIZ_basic-excel-web excel practice page and did everything until the homework tab which requires me to do a different data set. So all steps 1 through 6 including all the basic functions, how to filter out tools that were not necessary, how to adjust inputted graphs and visualizations, and how to add in all the different visualizations were completed.\n\n\nsince this was my first time learning how to use quarto after finishing all the excel practices from Monday, I have not explained each individual tool I practiced since I have completed them all already.\n\n![](Screenshot 2024-08-28 145847.png)\n\n### Friday\n\n\nToday I have chosen my data set. My data set has a large collection of data, which holds data of modeled medium and heavy duty vehicle with info on their stock, sales, energy consumption, greenhouse gas emissions, and total cost of driving. I have chosen to do vehicle sales as my dataset for today. Chatgpt recommends these areas for the inserts 1. Total Vehicle Sales by Year and Vehicle Class\n\n    Graph Type: Stacked Bar Chart\n    Purpose: This will show how the sales of different vehicle classes contribute to the total sales each year, and how the sales have changed over the years.\n    X-axis: Year (2023, 2024, 2025, 2026)\n    Y-axis: Vehicle Sales (in thousands)\n    Stacked Bars: Light-Medium (Class 3), Medium (Classes 4-6), Heavy (Classes 7-8)\n\n2. Trend of Vehicle Sales by Vehicle Class Over Time\n\n    Graph Type: Line Chart\n    Purpose: To visualize the trend of sales for each vehicle class over the years.\n    X-axis: Year (2023, 2024, 2025, 2026)\n    Y-axis: Vehicle Sales (in thousands)\n    Lines: Separate lines for Light-Medium (Class 3), Medium (Classes 4-6), and Heavy (Classes 7-8)\n\n3. Yearly Distribution of Vehicle Sales Across Classes\n\n    Graph Type: Pie Charts (for each year)\n    Purpose: To show the percentage share of each vehicle class in total sales for each year.\n    Slices: Light-Medium (Class 3), Medium (Classes 4-6), Heavy (Classes 7-8)\n\n4. Comparison of Vehicle Sales Growth Between Classes\n\n    Graph Type: Grouped Bar Chart\n    Purpose: To compare how much each vehicle class has grown or declined in sales from year to year.\n    X-axis: Year (2023, 2024, 2025, 2026)\n    Y-axis: Vehicle Sales (in thousands)\n    Bars: Separate bars for Light-Medium (Class 3), Medium (Classes 4-6), and Heavy (Classes 7-8), grouped by year.\n\n5. Sales Proportion Change Over Years for Each Vehicle Class\n\n    Graph Type: 100% Stacked Area Chart\n    Purpose: To show how the proportion of sales for each vehicle class has changed over the years.\n    X-axis: Year (2023, 2024, 2025, 2026)\n    Y-axis: Percentage of Total Sales (%)\n    Areas: Light-Medium (Class 3), Medium (Classes 4-6), Heavy (Classes 7-8)\n\nRecommended Chart: Total Vehicle Sales by Year and Vehicle Class (Stacked Bar Chart)\n\nThis chart provides a clear visual comparison of vehicle sales over the years and how each class contributes to the total sales.\n\n![](Screenshot 2024-08-31 223809.png)\n\n\nthis graph shows us that the light-medium vehicles are the ones that were sold the most from the large amount of data\n\n![](Screenshot 2024-08-31 224111.png)\n\n## Week 2\n\n### Wednesday\n\n#### Histogram\n\nI am using the airquality dataset, which is ...\n\n\nI use excel to clean the data, remove all the rows which have NA values, and I did an exploration analysis\n\n#### Ozone Histogram\n\n![](Screenshot 2024-09-04 144849.png)\n\n#### Ozone vs Temp\n\n![](Screenshot 2024-09-04 145425.png)\n#### which day out of all the months had the most solar R\n\n![](Screenshot 2024-09-04 152000.png)\n\n\n### friday\n\nToday I am learning about pivot charts which are extended from pivot tables. To get to my insert chart I selected all of my pivot table and near the insert tab there was an option for a pivot chart.\n\n![](Screenshot 2024-09-06 144851.png)\n\n\nThis graph shows how for each day for each month, the ratio of each value. For example, for each month you can start to see the temperature changes between each day within each month. You can see which days have more average Ozone, and which days have an increase of solar Radiation. We can see how when there is an increase in temperature, there is less solar radiation which I find interesting. there was a day on the 8th month where there seemed to be no solar radiation and only an increased average temp and increased ozone.\n\n\n\n![](Screenshot 2024-09-07 221735.png)\n\nThis pivot table and pivot chart for my data is representing how much of the market is taken up by which type of vehicles. We can see visually that generally, there is a trend that the shorter the distance for the commercial vehicles, the more of those types of vehicles are bought. My data for this week is the vehicle stock. The X line represents how much vehicles are sold, while the Y line lists the amount of miles expected for that commercial vehicle type. \n\n\n## Week 3\n\n### Wednesday\n\nA data frame with 20 observations on 3 variables.\n\n[, 1]\textra\tnumeric\tincrease in hours of sleep\n[, 2]\tgroup\tfactor\tdrug given\n[, 3]\tID\tfactor\tpatient ID\n\nUsing the sleep dataset to create my first dashboard\n\n<https://public.tableau.com/app/profile/hayk.shahumyan/viz/Wednesdayweek3/Dashboard1>\n\n### Friday\n\nI plan to work on fuel costs of vehicles of projected till 2040\n\nFormat\n\nThere are 3 variables we focus on:\ncost of electricity\ncost of diesel\ncost of hydrogen \nfrom now till 2050\n\nDetails\n\nWe can see trends of downward prices of electricity and hydrogen, while diesel is mostly stable in price\n\n\n<https://public.tableau.com/app/profile/hayk.shahumyan/viz/Week3Friday-Saturday/Dashboard1>\n\n## Week 4\n\n### Wednesday and Friday\n\n## This is a markdown title ##\n\nin markdown we can create lists:\n\n- Item 1\n- item 2\n- item 3\n\nalso we can create enumerated list\n\n1. Hola\n2. Hi\n3. Namaste\n\nwe can do **bold**, also *italic*\n\n\n\n\n```python\n# Here we are importing numpy with a nickname np\nimport numpy as np\nprint(np.absolute(-1))\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\n```\n\n    1\n    [1 2 3 4 5]\n    \n\n\n```python\n#List are native to python\nmy_list = [1, 2, 3, 4, 5]\nprint(my_list)\n\n```\n\n    [1, 2, 3, 4, 5]\n    \n\n\n```python\n# We will be using a lot of dataframes, so we need pandas library\nimport pandas as pd\ndata = {'Ozone': [41, 36, 12], 'Temp': [67, 72, 74]}\ndf = pd.DataFrame(data)\nprint(df)\n```\n\n       Ozone  Temp\n    0     41    67\n    1     36    72\n    2     12    74\n    \n\n## 4. Loading csv Files\n\nTo load .csv files into a `DataFrame`, we use the pandas function\n`read_csv`:\n\n\n```python\ndf = pd.read_csv('airquality_datasets.csv')\n```\n\n\n```python\nprint(df.info())\nprint(df.describe())\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 153 entries, 0 to 152\n    Data columns (total 6 columns):\n     #   Column   Non-Null Count  Dtype  \n    ---  ------   --------------  -----  \n     0   Ozone    116 non-null    float64\n     1   Solar.R  146 non-null    float64\n     2   Wind     153 non-null    float64\n     3   Temp     153 non-null    int64  \n     4   Month    153 non-null    int64  \n     5   Day      153 non-null    int64  \n    dtypes: float64(3), int64(3)\n    memory usage: 7.3 KB\n    None\n                Ozone     Solar.R        Wind        Temp       Month         Day\n    count  116.000000  146.000000  153.000000  153.000000  153.000000  153.000000\n    mean    42.129310  185.931507    9.957516   77.882353    6.993464   15.803922\n    std     32.987885   90.058422    3.523001    9.465270    1.416522    8.864520\n    min      1.000000    7.000000    1.700000   56.000000    5.000000    1.000000\n    25%     18.000000  115.750000    7.400000   72.000000    6.000000    8.000000\n    50%     31.500000  205.000000    9.700000   79.000000    7.000000   16.000000\n    75%     63.250000  258.750000   11.500000   85.000000    8.000000   23.000000\n    max    168.000000  334.000000   20.700000   97.000000    9.000000   31.000000\n    \n\n## 5. visualizing the dataset\nLet’s dive into visualizations using matplotlib. We’ll start with simple histograms and boxplots, then move on to correlation plots.\nHistograms\n\nHistograms help us understand the distribution of the variables. We’ll create histograms for Ozone and Temp.\n\n\n```python\nimport matplotlib.pyplot as plt\n\n# Ozone Histogram\nplt.figure(figsize=(8, 6))\nplt.hist(df['Ozone'].dropna(), bins=20, color='blue', edgecolor='black')\nplt.title('Distribution of Ozone Levels')\nplt.xlabel('Ozone (ppb)')\nplt.ylabel('Frequency')\nplt.show()\n\n```\n\n\n    \n![png](Tut2_Python_Shahumayn_092024_files/Tut2_Python_Shahumayn_092024_8_0.png)\n    \n\n\n\n```python\n\n# Temp Histogram\nplt.figure(figsize=(8, 6))\nplt.hist(df['Temp'].dropna(), bins=20, color='orange', edgecolor='black')\nplt.title('Distribution of Temperature')\nplt.xlabel('Temperature (°F)')\nplt.ylabel('Frequency')\nplt.show()\n```\n\n\n    \n![png](Tut2_Python_Shahumayn_092024_files/Tut2_Python_Shahumayn_092024_9_0.png)\n    \n\n\n\n```python\n\n```\n\n## Week 5\n\n\n\n\n![](HaykWeek5.png)\n\n## Week after fall break\n\n## Second semester schedule\n\nAll charts made in r studio or shiny and 1-3 sentence summary with each visualization \n\nNov 2: create a dual-line chart comparing number of work stoppages beginning and number of work stoppages in effect\n\nNov 9: create a stacked area chart comparing workers involved beginning and workers involved in effect\n\nNov 16: create a scatter plot comparing days of idleness and percent total working time\n\nNov 23: create a bubble chart comparing number of work stoppages beginning, workers involved beginning and days of idleness\n\nNov 30: create a 3D scatter plot comparing the number of work stoppages in effect, workers involved in effect, and percent total working time\n\n\n\n\n(For this weeks assignment, everyone needed to find a dataset from our datasource and give a summary about it.)\n\nhttps://www.bls.gov/wsp/overview.htm\n\nThe data provides a historical record of annual work stoppages in the U.S. involving 1,000 or more workers, starting from 1947. It includes the following key information:\n\n    The year of the work stoppage.\n    The number of work stoppages that began in a given year and those still in effect.\n    The number of workers involved (in thousands).\n    The number of days of idleness (in thousands) caused by these stoppages.\n    The percentage of total working time lost due to these stoppages.\n\nThis dataset is focused on capturing the frequency and economic impact of large-scale labor disruptions over time.\n\n\ndirect summary from the website:\n\nThe Bureau of Labor Statistics has two types of data about work stoppages: Work Stoppages program data and the Strike Report.\n\nThe Work Stoppages program provides monthly and annual data of major work stoppages involving 1,000 or more workers lasting one full shift or longer. The monthly and annual data show the establishment and union(s) involved in the work stoppage along with the location, the number of workers and the days of idleness. The monthly data list all work stoppages involving 1,000 or more workers that occurred during the full calendar month for each month of the year. The annualized data provide statistics, analysis and details of each work stoppage of 1,000 or more workers that occurred during the year. The work stoppages data are gathered from public news sources, such as newspapers and the Internet. The BLS does not distinguish between strikes and lock-outs in the data; both are included in the term \"work stoppages\".\n\n\n## oct 28th\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(readxl)\n\n# Load the dataset\ndata4 <- read_excel(\"cleaned_annual_listing.xlsx\", sheet = \"Sheet1\")\n\n# Ensure Year column is numeric and remove NA values\ndata4$Year <- as.numeric(data4$Year)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\ndata4 <- data4[!is.na(data4$Year), ]\n\n# Create a dual-line chart with adjusted x-axis labels\nggplot(data4, aes(x = Year)) +\n  geom_line(aes(y = Number_of_Work_Stoppages_Beginning, color = \"Work Stoppages Beginning\", group = 1), na.rm = TRUE) +\n  geom_line(aes(y = Number_of_Work_Stoppages_In_Effect, color = \"Work Stoppages In Effect\", group = 1), na.rm = TRUE) +\n  labs(title = \"Comparison of Work Stoppages Beginning and In Effect Over the Years\",\n       x = \"Year\",\n       y = \"Number of Work Stoppages\",\n       color = \"Legend\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(min(data4$Year, na.rm = TRUE), max(data4$Year, na.rm = TRUE), by = 5)) + # Show every 5th year\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels\n```\n\n::: {.cell-output-display}\n![](Hayk_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n\nThe graph shows a clear decline in the number of work stoppages that both began and were in effect over the years, especially prominent from the mid-20th century onward. The \"Work Stoppages Beginning\" generally tracked slightly above \"Work Stoppages In Effect,\" but both followed a similar downward trend. This decline may indicate changes in labor practices, regulations, or economic conditions affecting work stoppages over time.\n\n",
    "supporting": [
      "Hayk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}